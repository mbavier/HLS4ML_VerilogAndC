-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_10u_softmax_config6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    res_V_data_0_V_TREADY : IN STD_LOGIC;
    res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TREADY : IN STD_LOGIC;
    res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_V_data_2_V_TREADY : IN STD_LOGIC;
    res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_V_data_3_V_TREADY : IN STD_LOGIC;
    res_V_data_4_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_TVALID : OUT STD_LOGIC;
    res_V_data_4_V_TREADY : IN STD_LOGIC;
    res_V_data_5_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_TVALID : OUT STD_LOGIC;
    res_V_data_5_V_TREADY : IN STD_LOGIC;
    res_V_data_6_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_TVALID : OUT STD_LOGIC;
    res_V_data_6_V_TREADY : IN STD_LOGIC;
    res_V_data_7_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_TVALID : OUT STD_LOGIC;
    res_V_data_7_V_TREADY : IN STD_LOGIC;
    res_V_data_8_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_TVALID : OUT STD_LOGIC;
    res_V_data_8_V_TREADY : IN STD_LOGIC;
    res_V_data_9_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_TVALID : OUT STD_LOGIC;
    res_V_data_9_V_TREADY : IN STD_LOGIC;
    data_V_data_0_V_blk_n : OUT STD_LOGIC;
    data_V_data_1_V_blk_n : OUT STD_LOGIC;
    data_V_data_2_V_blk_n : OUT STD_LOGIC;
    data_V_data_3_V_blk_n : OUT STD_LOGIC;
    data_V_data_4_V_blk_n : OUT STD_LOGIC;
    data_V_data_5_V_blk_n : OUT STD_LOGIC;
    data_V_data_6_V_blk_n : OUT STD_LOGIC;
    data_V_data_7_V_blk_n : OUT STD_LOGIC;
    data_V_data_8_V_blk_n : OUT STD_LOGIC;
    data_V_data_9_V_blk_n : OUT STD_LOGIC;
    res_V_data_0_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_1_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_2_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_3_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_4_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_5_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_6_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_7_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_8_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_9_V_TDATA_blk_n : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_10u_softmax_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op5 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exp_table1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce0 : STD_LOGIC;
    signal exp_table1_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce1 : STD_LOGIC;
    signal exp_table1_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce2 : STD_LOGIC;
    signal exp_table1_q2 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce3 : STD_LOGIC;
    signal exp_table1_q3 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce4 : STD_LOGIC;
    signal exp_table1_q4 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce5 : STD_LOGIC;
    signal exp_table1_q5 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce6 : STD_LOGIC;
    signal exp_table1_q6 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce7 : STD_LOGIC;
    signal exp_table1_q7 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce8 : STD_LOGIC;
    signal exp_table1_q8 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_table1_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce9 : STD_LOGIC;
    signal exp_table1_q9 : STD_LOGIC_VECTOR (17 downto 0);
    signal invert_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table2_ce0 : STD_LOGIC;
    signal invert_table2_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal data_array_0_V_reg_2130 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_2135 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_2140 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_2145 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_2150 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_2155 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_2160 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_2165 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2170 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2177 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_6_fu_923_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_6_reg_2184 : STD_LOGIC_VECTOR (15 downto 0);
    signal exp_res_0_V_reg_2240 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_1_V_reg_2245 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_2_V_reg_2250 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_3_V_reg_2255 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_4_V_reg_2260 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_5_V_reg_2265 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_6_V_reg_2270 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_7_V_reg_2275 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_8_V_reg_2280 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_9_V_reg_2285 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln230_fu_1541_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_1_fu_1580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_2_fu_1619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_3_fu_1658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_4_fu_1697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_5_fu_1736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_6_fu_1775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_7_fu_1814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_8_fu_1853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_9_fu_1892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln238_fu_1961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1118_fu_422_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln242_fu_1966_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_fu_422_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_2_fu_423_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_2_fu_423_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_4_fu_424_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_4_fu_424_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_6_fu_425_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_6_fu_425_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_3_fu_426_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_3_fu_426_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_7_fu_427_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_7_fu_427_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_5_fu_428_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_5_fu_428_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_1_fu_429_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_1_fu_429_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_8_fu_430_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_8_fu_430_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_9_fu_431_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_9_fu_431_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1496_fu_833_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_833_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_fu_839_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_fu_839_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_847_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_847_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_1_fu_853_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_1_fu_853_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_fu_839_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_1_fu_853_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_875_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_875_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_3_fu_881_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_3_fu_881_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_889_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_889_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_4_fu_895_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_4_fu_895_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_3_fu_881_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_4_fu_895_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_5_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_2_fu_867_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln86_5_fu_909_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_6_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_7_fu_935_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_8_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_946_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_953_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_956_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_960_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_1012_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_1_fu_1015_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_23_fu_1029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1021_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_1067_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_2_fu_1070_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_25_fu_1084_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1076_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_1122_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_3_fu_1125_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_27_fu_1139_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_1177_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_4_fu_1180_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_fu_1194_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1186_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_1220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_6_fu_1232_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_5_fu_1235_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_fu_1249_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1241_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_7_fu_1287_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_6_fu_1290_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_33_fu_1304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_8_fu_1342_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_7_fu_1345_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_35_fu_1359_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1351_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_9_fu_1397_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_8_fu_1400_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_fu_1414_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1406_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_10_fu_1452_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_9_fu_1455_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_39_fu_1469_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1461_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1507_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1517_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1525_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_fu_1533_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_11_fu_1049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1546_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_1_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1556_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_1564_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_1572_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_12_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1585_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_2_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1595_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_1603_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_1611_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_13_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1624_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_3_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1634_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_1642_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_1650_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_14_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1663_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_4_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1673_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_1681_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_1689_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_15_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1702_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1712_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_5_fu_1720_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_1728_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_16_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1741_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_12_fu_1751_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_6_fu_1759_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_fu_1767_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_17_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1780_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_14_fu_1790_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_7_fu_1798_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_fu_1806_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_18_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1819_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_8_fu_1428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_16_fu_1829_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_8_fu_1837_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_fu_1845_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_19_fu_1489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1858_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_9_fu_1483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_1501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_18_fu_1868_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_9_fu_1876_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_fu_1884_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_fu_1897_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_fu_1897_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_1_fu_1903_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_1_fu_1903_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_2_fu_1909_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_1_fu_1903_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_fu_1897_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_2_fu_1909_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_4_fu_1921_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_4_fu_1921_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_5_fu_1927_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_5_fu_1927_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_6_fu_1933_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_5_fu_1927_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_4_fu_1921_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_6_fu_1933_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_3_fu_1915_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_7_fu_1939_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_sum_V_fu_1945_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_V_10_fu_1951_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_fu_422_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_1_fu_429_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_2_fu_423_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_3_fu_426_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_4_fu_424_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_5_fu_428_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_6_fu_425_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_7_fu_427_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_8_fu_430_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_9_fu_431_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component softmax_stable_array_array_ap_fixed_10u_softmax_config6_sdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (17 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_10u_softmax_config6_seOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    exp_table1_U : component softmax_stable_array_array_ap_fixed_10u_softmax_config6_sdEe
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table1_address0,
        ce0 => exp_table1_ce0,
        q0 => exp_table1_q0,
        address1 => exp_table1_address1,
        ce1 => exp_table1_ce1,
        q1 => exp_table1_q1,
        address2 => exp_table1_address2,
        ce2 => exp_table1_ce2,
        q2 => exp_table1_q2,
        address3 => exp_table1_address3,
        ce3 => exp_table1_ce3,
        q3 => exp_table1_q3,
        address4 => exp_table1_address4,
        ce4 => exp_table1_ce4,
        q4 => exp_table1_q4,
        address5 => exp_table1_address5,
        ce5 => exp_table1_ce5,
        q5 => exp_table1_q5,
        address6 => exp_table1_address6,
        ce6 => exp_table1_ce6,
        q6 => exp_table1_q6,
        address7 => exp_table1_address7,
        ce7 => exp_table1_ce7,
        q7 => exp_table1_q7,
        address8 => exp_table1_address8,
        ce8 => exp_table1_ce8,
        q8 => exp_table1_q8,
        address9 => exp_table1_address9,
        ce9 => exp_table1_ce9,
        q9 => exp_table1_q9);

    invert_table2_U : component softmax_stable_array_array_ap_fixed_10u_softmax_config6_seOg
    generic map (
        DataWidth => 14,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table2_address0,
        ce0 => invert_table2_ce0,
        q0 => invert_table2_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_array_0_V_reg_2130 <= data_V_data_0_V_dout;
                data_array_1_V_reg_2135 <= data_V_data_1_V_dout;
                data_array_2_V_reg_2140 <= data_V_data_2_V_dout;
                data_array_3_V_reg_2145 <= data_V_data_3_V_dout;
                data_array_4_V_reg_2150 <= data_V_data_4_V_dout;
                data_array_5_V_reg_2155 <= data_V_data_5_V_dout;
                data_array_6_V_reg_2160 <= data_V_data_6_V_dout;
                data_array_7_V_reg_2165 <= data_V_data_7_V_dout;
                data_array_8_V_reg_2170 <= data_V_data_8_V_dout;
                data_array_9_V_reg_2177 <= data_V_data_9_V_dout;
                select_ln86_6_reg_2184 <= select_ln86_6_fu_923_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                exp_res_0_V_reg_2240 <= exp_table1_q0;
                exp_res_1_V_reg_2245 <= exp_table1_q1;
                exp_res_2_V_reg_2250 <= exp_table1_q2;
                exp_res_3_V_reg_2255 <= exp_table1_q3;
                exp_res_4_V_reg_2260 <= exp_table1_q4;
                exp_res_5_V_reg_2265 <= exp_table1_q5;
                exp_res_6_V_reg_2270 <= exp_table1_q6;
                exp_res_7_V_reg_2275 <= exp_table1_q7;
                exp_res_8_V_reg_2280 <= exp_table1_q8;
                exp_res_9_V_reg_2285 <= exp_table1_q9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln703_1_fu_1903_p0 <= exp_table1_q7;
    add_ln703_1_fu_1903_p1 <= exp_table1_q2;
    add_ln703_1_fu_1903_p2 <= std_logic_vector(signed(add_ln703_1_fu_1903_p0) + signed(add_ln703_1_fu_1903_p1));
    add_ln703_2_fu_1909_p0 <= exp_table1_q3;
    add_ln703_2_fu_1909_p2 <= std_logic_vector(signed(add_ln703_2_fu_1909_p0) + signed(add_ln703_1_fu_1903_p2));
    add_ln703_3_fu_1915_p2 <= std_logic_vector(unsigned(add_ln703_fu_1897_p2) + unsigned(add_ln703_2_fu_1909_p2));
    add_ln703_4_fu_1921_p0 <= exp_table1_q5;
    add_ln703_4_fu_1921_p1 <= exp_table1_q6;
    add_ln703_4_fu_1921_p2 <= std_logic_vector(signed(add_ln703_4_fu_1921_p0) + signed(add_ln703_4_fu_1921_p1));
    add_ln703_5_fu_1927_p0 <= exp_table1_q8;
    add_ln703_5_fu_1927_p1 <= exp_table1_q9;
    add_ln703_5_fu_1927_p2 <= std_logic_vector(signed(add_ln703_5_fu_1927_p0) + signed(add_ln703_5_fu_1927_p1));
    add_ln703_6_fu_1933_p0 <= exp_table1_q4;
    add_ln703_6_fu_1933_p2 <= std_logic_vector(signed(add_ln703_6_fu_1933_p0) + signed(add_ln703_5_fu_1927_p2));
    add_ln703_7_fu_1939_p2 <= std_logic_vector(unsigned(add_ln703_4_fu_1921_p2) + unsigned(add_ln703_6_fu_1933_p2));
    add_ln703_fu_1897_p0 <= exp_table1_q1;
    add_ln703_fu_1897_p1 <= exp_table1_q0;
    add_ln703_fu_1897_p2 <= std_logic_vector(signed(add_ln703_fu_1897_p0) + signed(add_ln703_fu_1897_p1));
    and_ln786_1_fu_1043_p2 <= (xor_ln786_1_fu_1037_p2 and tmp_22_fu_1021_p3);
    and_ln786_2_fu_1098_p2 <= (xor_ln786_2_fu_1092_p2 and tmp_24_fu_1076_p3);
    and_ln786_3_fu_1153_p2 <= (xor_ln786_3_fu_1147_p2 and tmp_26_fu_1131_p3);
    and_ln786_4_fu_1208_p2 <= (xor_ln786_4_fu_1202_p2 and tmp_28_fu_1186_p3);
    and_ln786_5_fu_1263_p2 <= (xor_ln786_5_fu_1257_p2 and tmp_30_fu_1241_p3);
    and_ln786_6_fu_1318_p2 <= (xor_ln786_6_fu_1312_p2 and tmp_32_fu_1296_p3);
    and_ln786_7_fu_1373_p2 <= (xor_ln786_7_fu_1367_p2 and tmp_34_fu_1351_p3);
    and_ln786_8_fu_1428_p2 <= (xor_ln786_8_fu_1422_p2 and tmp_36_fu_1406_p3);
    and_ln786_9_fu_1483_p2 <= (xor_ln786_9_fu_1477_p2 and tmp_38_fu_1461_p3);
    and_ln786_fu_988_p2 <= (xor_ln786_fu_982_p2 and tmp_fu_966_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, io_acc_block_signal_op5)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter3, io_acc_block_signal_op5, res_V_data_0_V_TREADY)
    begin
                ap_block_pp0_stage0_11001 <= (((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter3, io_acc_block_signal_op5, res_V_data_0_V_TREADY)
    begin
                ap_block_pp0_stage0_subdone <= (((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, io_acc_block_signal_op5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_0_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_1_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_2_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_3_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_4_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_5_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_6_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_7_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_8_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_9_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exp_sum_V_fu_1945_p2 <= std_logic_vector(unsigned(add_ln703_3_fu_1915_p2) + unsigned(add_ln703_7_fu_1939_p2));
    exp_table1_address0 <= zext_ln230_fu_1541_p1(10 - 1 downto 0);
    exp_table1_address1 <= zext_ln230_1_fu_1580_p1(10 - 1 downto 0);
    exp_table1_address2 <= zext_ln230_2_fu_1619_p1(10 - 1 downto 0);
    exp_table1_address3 <= zext_ln230_3_fu_1658_p1(10 - 1 downto 0);
    exp_table1_address4 <= zext_ln230_4_fu_1697_p1(10 - 1 downto 0);
    exp_table1_address5 <= zext_ln230_5_fu_1736_p1(10 - 1 downto 0);
    exp_table1_address6 <= zext_ln230_6_fu_1775_p1(10 - 1 downto 0);
    exp_table1_address7 <= zext_ln230_7_fu_1814_p1(10 - 1 downto 0);
    exp_table1_address8 <= zext_ln230_8_fu_1853_p1(10 - 1 downto 0);
    exp_table1_address9 <= zext_ln230_9_fu_1892_p1(10 - 1 downto 0);

    exp_table1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce0 <= ap_const_logic_1;
        else 
            exp_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce1 <= ap_const_logic_1;
        else 
            exp_table1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce2 <= ap_const_logic_1;
        else 
            exp_table1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce3 <= ap_const_logic_1;
        else 
            exp_table1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce4 <= ap_const_logic_1;
        else 
            exp_table1_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce5 <= ap_const_logic_1;
        else 
            exp_table1_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce6 <= ap_const_logic_1;
        else 
            exp_table1_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce7 <= ap_const_logic_1;
        else 
            exp_table1_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce8 <= ap_const_logic_1;
        else 
            exp_table1_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce9_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce9 <= ap_const_logic_1;
        else 
            exp_table1_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_1_fu_847_p0 <= data_V_data_2_V_dout;
    icmp_ln1496_1_fu_847_p1 <= data_V_data_3_V_dout;
    icmp_ln1496_1_fu_847_p2 <= "1" when (signed(icmp_ln1496_1_fu_847_p0) < signed(icmp_ln1496_1_fu_847_p1)) else "0";
    icmp_ln1496_2_fu_861_p2 <= "1" when (signed(select_ln86_fu_839_p3) < signed(select_ln86_1_fu_853_p3)) else "0";
    icmp_ln1496_3_fu_875_p0 <= data_V_data_4_V_dout;
    icmp_ln1496_3_fu_875_p1 <= data_V_data_5_V_dout;
    icmp_ln1496_3_fu_875_p2 <= "1" when (signed(icmp_ln1496_3_fu_875_p0) < signed(icmp_ln1496_3_fu_875_p1)) else "0";
    icmp_ln1496_4_fu_889_p0 <= data_V_data_6_V_dout;
    icmp_ln1496_4_fu_889_p1 <= data_V_data_7_V_dout;
    icmp_ln1496_4_fu_889_p2 <= "1" when (signed(icmp_ln1496_4_fu_889_p0) < signed(icmp_ln1496_4_fu_889_p1)) else "0";
    icmp_ln1496_5_fu_903_p2 <= "1" when (signed(select_ln86_3_fu_881_p3) < signed(select_ln86_4_fu_895_p3)) else "0";
    icmp_ln1496_6_fu_917_p2 <= "1" when (signed(select_ln86_2_fu_867_p3) < signed(select_ln86_5_fu_909_p3)) else "0";
    icmp_ln1496_7_fu_931_p2 <= "1" when (signed(data_array_8_V_reg_2170) < signed(data_array_9_V_reg_2177)) else "0";
    icmp_ln1496_8_fu_941_p2 <= "1" when (signed(select_ln86_6_reg_2184) < signed(select_ln86_7_fu_935_p3)) else "0";
    icmp_ln1496_fu_833_p0 <= data_V_data_0_V_dout;
    icmp_ln1496_fu_833_p1 <= data_V_data_1_V_dout;
    icmp_ln1496_fu_833_p2 <= "1" when (signed(icmp_ln1496_fu_833_p0) < signed(icmp_ln1496_fu_833_p1)) else "0";
    invert_table2_address0 <= zext_ln238_fu_1961_p1(10 - 1 downto 0);

    invert_table2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            invert_table2_ce0 <= ap_const_logic_1;
        else 
            invert_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op5 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    mul_ln1118_1_fu_429_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_1_fu_429_p1 <= exp_res_1_V_reg_2245;
    mul_ln1118_1_fu_429_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_1_fu_429_p0) * signed(mul_ln1118_1_fu_429_p1))), 26));
    mul_ln1118_2_fu_423_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_2_fu_423_p1 <= exp_res_2_V_reg_2250;
    mul_ln1118_2_fu_423_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_2_fu_423_p0) * signed(mul_ln1118_2_fu_423_p1))), 26));
    mul_ln1118_3_fu_426_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_3_fu_426_p1 <= exp_res_3_V_reg_2255;
    mul_ln1118_3_fu_426_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_3_fu_426_p0) * signed(mul_ln1118_3_fu_426_p1))), 26));
    mul_ln1118_4_fu_424_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_4_fu_424_p1 <= exp_res_4_V_reg_2260;
    mul_ln1118_4_fu_424_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_4_fu_424_p0) * signed(mul_ln1118_4_fu_424_p1))), 26));
    mul_ln1118_5_fu_428_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_5_fu_428_p1 <= exp_res_5_V_reg_2265;
    mul_ln1118_5_fu_428_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_5_fu_428_p0) * signed(mul_ln1118_5_fu_428_p1))), 26));
    mul_ln1118_6_fu_425_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_6_fu_425_p1 <= exp_res_6_V_reg_2270;
    mul_ln1118_6_fu_425_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_6_fu_425_p0) * signed(mul_ln1118_6_fu_425_p1))), 26));
    mul_ln1118_7_fu_427_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_7_fu_427_p1 <= exp_res_7_V_reg_2275;
    mul_ln1118_7_fu_427_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_7_fu_427_p0) * signed(mul_ln1118_7_fu_427_p1))), 26));
    mul_ln1118_8_fu_430_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_8_fu_430_p1 <= exp_res_8_V_reg_2280;
    mul_ln1118_8_fu_430_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_8_fu_430_p0) * signed(mul_ln1118_8_fu_430_p1))), 26));
    mul_ln1118_9_fu_431_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_9_fu_431_p1 <= exp_res_9_V_reg_2285;
    mul_ln1118_9_fu_431_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_9_fu_431_p0) * signed(mul_ln1118_9_fu_431_p1))), 26));
    mul_ln1118_fu_422_p0 <= sext_ln242_fu_1966_p1(14 - 1 downto 0);
    mul_ln1118_fu_422_p1 <= exp_res_0_V_reg_2240;
    mul_ln1118_fu_422_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_422_p0) * signed(mul_ln1118_fu_422_p1))), 26));
    or_ln340_1_fu_1061_p2 <= (xor_ln340_1_fu_1055_p2 or tmp_23_fu_1029_p3);
    or_ln340_2_fu_1116_p2 <= (xor_ln340_2_fu_1110_p2 or tmp_25_fu_1084_p3);
    or_ln340_3_fu_1171_p2 <= (xor_ln340_3_fu_1165_p2 or tmp_27_fu_1139_p3);
    or_ln340_4_fu_1226_p2 <= (xor_ln340_4_fu_1220_p2 or tmp_29_fu_1194_p3);
    or_ln340_5_fu_1281_p2 <= (xor_ln340_5_fu_1275_p2 or tmp_31_fu_1249_p3);
    or_ln340_6_fu_1336_p2 <= (xor_ln340_6_fu_1330_p2 or tmp_33_fu_1304_p3);
    or_ln340_7_fu_1391_p2 <= (xor_ln340_7_fu_1385_p2 or tmp_35_fu_1359_p3);
    or_ln340_8_fu_1446_p2 <= (xor_ln340_8_fu_1440_p2 or tmp_37_fu_1414_p3);
    or_ln340_9_fu_1501_p2 <= (xor_ln340_9_fu_1495_p2 or tmp_39_fu_1469_p3);
    or_ln340_fu_1006_p2 <= (xor_ln340_fu_1000_p2 or tmp_21_fu_974_p3);
    res_V_data_0_V_TDATA <= mul_ln1118_fu_422_p2(25 downto 10);

    res_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_0_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_0_V_TDATA_blk_n <= res_V_data_0_V_TREADY;
        else 
            res_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_0_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_0_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_0_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_1_V_TDATA <= mul_ln1118_1_fu_429_p2(25 downto 10);

    res_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_1_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_1_V_TDATA_blk_n <= res_V_data_1_V_TREADY;
        else 
            res_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_1_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_1_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_1_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_2_V_TDATA <= mul_ln1118_2_fu_423_p2(25 downto 10);

    res_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_2_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_2_V_TDATA_blk_n <= res_V_data_2_V_TREADY;
        else 
            res_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_2_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_2_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_2_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_3_V_TDATA <= mul_ln1118_3_fu_426_p2(25 downto 10);

    res_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_3_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_3_V_TDATA_blk_n <= res_V_data_3_V_TREADY;
        else 
            res_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_3_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_3_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_3_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_4_V_TDATA <= mul_ln1118_4_fu_424_p2(25 downto 10);

    res_V_data_4_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_4_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_4_V_TDATA_blk_n <= res_V_data_4_V_TREADY;
        else 
            res_V_data_4_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_4_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_4_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_4_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_5_V_TDATA <= mul_ln1118_5_fu_428_p2(25 downto 10);

    res_V_data_5_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_5_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_5_V_TDATA_blk_n <= res_V_data_5_V_TREADY;
        else 
            res_V_data_5_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_5_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_5_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_5_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_6_V_TDATA <= mul_ln1118_6_fu_425_p2(25 downto 10);

    res_V_data_6_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_6_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_6_V_TDATA_blk_n <= res_V_data_6_V_TREADY;
        else 
            res_V_data_6_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_6_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_6_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_6_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_7_V_TDATA <= mul_ln1118_7_fu_427_p2(25 downto 10);

    res_V_data_7_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_7_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_7_V_TDATA_blk_n <= res_V_data_7_V_TREADY;
        else 
            res_V_data_7_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_7_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_7_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_7_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_8_V_TDATA <= mul_ln1118_8_fu_430_p2(25 downto 10);

    res_V_data_8_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_8_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_8_V_TDATA_blk_n <= res_V_data_8_V_TREADY;
        else 
            res_V_data_8_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_8_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_8_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_8_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_9_V_TDATA <= mul_ln1118_9_fu_431_p2(25 downto 10);

    res_V_data_9_V_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, res_V_data_9_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_9_V_TDATA_blk_n <= res_V_data_9_V_TREADY;
        else 
            res_V_data_9_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_9_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            res_V_data_9_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_9_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_10_fu_1712_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_15_fu_1269_p2(0) = '1') else 
        tmp_16_fu_1702_p4;
    select_ln340_12_fu_1751_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_16_fu_1324_p2(0) = '1') else 
        tmp_17_fu_1741_p4;
    select_ln340_14_fu_1790_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_17_fu_1379_p2(0) = '1') else 
        tmp_18_fu_1780_p4;
    select_ln340_16_fu_1829_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_18_fu_1434_p2(0) = '1') else 
        tmp_19_fu_1819_p4;
    select_ln340_18_fu_1868_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_19_fu_1489_p2(0) = '1') else 
        tmp_20_fu_1858_p4;
    select_ln340_2_fu_1556_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_11_fu_1049_p2(0) = '1') else 
        tmp_12_fu_1546_p4;
    select_ln340_4_fu_1595_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_1104_p2(0) = '1') else 
        tmp_13_fu_1585_p4;
    select_ln340_6_fu_1634_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_13_fu_1159_p2(0) = '1') else 
        tmp_14_fu_1624_p4;
    select_ln340_8_fu_1673_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_14_fu_1214_p2(0) = '1') else 
        tmp_15_fu_1663_p4;
    select_ln340_fu_1517_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_10_fu_994_p2(0) = '1') else 
        tmp_11_fu_1507_p4;
    select_ln388_1_fu_1564_p3 <= 
        ap_const_lv10_200 when (and_ln786_1_fu_1043_p2(0) = '1') else 
        tmp_12_fu_1546_p4;
    select_ln388_2_fu_1603_p3 <= 
        ap_const_lv10_200 when (and_ln786_2_fu_1098_p2(0) = '1') else 
        tmp_13_fu_1585_p4;
    select_ln388_3_fu_1642_p3 <= 
        ap_const_lv10_200 when (and_ln786_3_fu_1153_p2(0) = '1') else 
        tmp_14_fu_1624_p4;
    select_ln388_4_fu_1681_p3 <= 
        ap_const_lv10_200 when (and_ln786_4_fu_1208_p2(0) = '1') else 
        tmp_15_fu_1663_p4;
    select_ln388_5_fu_1720_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_1263_p2(0) = '1') else 
        tmp_16_fu_1702_p4;
    select_ln388_6_fu_1759_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_1318_p2(0) = '1') else 
        tmp_17_fu_1741_p4;
    select_ln388_7_fu_1798_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_1373_p2(0) = '1') else 
        tmp_18_fu_1780_p4;
    select_ln388_8_fu_1837_p3 <= 
        ap_const_lv10_200 when (and_ln786_8_fu_1428_p2(0) = '1') else 
        tmp_19_fu_1819_p4;
    select_ln388_9_fu_1876_p3 <= 
        ap_const_lv10_200 when (and_ln786_9_fu_1483_p2(0) = '1') else 
        tmp_20_fu_1858_p4;
    select_ln388_fu_1525_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_988_p2(0) = '1') else 
        tmp_11_fu_1507_p4;
    select_ln86_1_fu_853_p1 <= data_V_data_3_V_dout;
    select_ln86_1_fu_853_p2 <= data_V_data_2_V_dout;
    select_ln86_1_fu_853_p3 <= 
        select_ln86_1_fu_853_p1 when (icmp_ln1496_1_fu_847_p2(0) = '1') else 
        select_ln86_1_fu_853_p2;
    select_ln86_2_fu_867_p3 <= 
        select_ln86_1_fu_853_p3 when (icmp_ln1496_2_fu_861_p2(0) = '1') else 
        select_ln86_fu_839_p3;
    select_ln86_3_fu_881_p1 <= data_V_data_5_V_dout;
    select_ln86_3_fu_881_p2 <= data_V_data_4_V_dout;
    select_ln86_3_fu_881_p3 <= 
        select_ln86_3_fu_881_p1 when (icmp_ln1496_3_fu_875_p2(0) = '1') else 
        select_ln86_3_fu_881_p2;
    select_ln86_4_fu_895_p1 <= data_V_data_7_V_dout;
    select_ln86_4_fu_895_p2 <= data_V_data_6_V_dout;
    select_ln86_4_fu_895_p3 <= 
        select_ln86_4_fu_895_p1 when (icmp_ln1496_4_fu_889_p2(0) = '1') else 
        select_ln86_4_fu_895_p2;
    select_ln86_5_fu_909_p3 <= 
        select_ln86_4_fu_895_p3 when (icmp_ln1496_5_fu_903_p2(0) = '1') else 
        select_ln86_3_fu_881_p3;
    select_ln86_6_fu_923_p3 <= 
        select_ln86_5_fu_909_p3 when (icmp_ln1496_6_fu_917_p2(0) = '1') else 
        select_ln86_2_fu_867_p3;
    select_ln86_7_fu_935_p3 <= 
        data_array_9_V_reg_2177 when (icmp_ln1496_7_fu_931_p2(0) = '1') else 
        data_array_8_V_reg_2170;
    select_ln86_fu_839_p1 <= data_V_data_1_V_dout;
    select_ln86_fu_839_p2 <= data_V_data_0_V_dout;
    select_ln86_fu_839_p3 <= 
        select_ln86_fu_839_p1 when (icmp_ln1496_fu_833_p2(0) = '1') else 
        select_ln86_fu_839_p2;
        sext_ln242_fu_1966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(invert_table2_q0),26));

        sext_ln703_10_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_9_V_reg_2177),17));

        sext_ln703_1_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_946_p3),17));

        sext_ln703_2_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_V_reg_2135),17));

        sext_ln703_3_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_V_reg_2140),17));

        sext_ln703_4_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_V_reg_2145),17));

        sext_ln703_5_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_V_reg_2150),17));

        sext_ln703_6_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_V_reg_2155),17));

        sext_ln703_7_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_V_reg_2160),17));

        sext_ln703_8_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_V_reg_2165),17));

        sext_ln703_9_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_8_V_reg_2170),17));

        sext_ln703_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_0_V_reg_2130),17));

    sub_ln1193_1_fu_1015_p2 <= std_logic_vector(signed(sext_ln703_2_fu_1012_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_2_fu_1070_p2 <= std_logic_vector(signed(sext_ln703_3_fu_1067_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_3_fu_1125_p2 <= std_logic_vector(signed(sext_ln703_4_fu_1122_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_4_fu_1180_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1177_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_5_fu_1235_p2 <= std_logic_vector(signed(sext_ln703_6_fu_1232_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_6_fu_1290_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1287_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_7_fu_1345_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1342_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_8_fu_1400_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1397_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_9_fu_1455_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1452_p1) - signed(sext_ln703_1_fu_956_p1));
    sub_ln1193_fu_960_p2 <= std_logic_vector(signed(sext_ln703_fu_953_p1) - signed(sext_ln703_1_fu_956_p1));
    tmp_11_fu_1507_p4 <= sub_ln1193_fu_960_p2(15 downto 6);
    tmp_12_fu_1546_p4 <= sub_ln1193_1_fu_1015_p2(15 downto 6);
    tmp_13_fu_1585_p4 <= sub_ln1193_2_fu_1070_p2(15 downto 6);
    tmp_14_fu_1624_p4 <= sub_ln1193_3_fu_1125_p2(15 downto 6);
    tmp_15_fu_1663_p4 <= sub_ln1193_4_fu_1180_p2(15 downto 6);
    tmp_16_fu_1702_p4 <= sub_ln1193_5_fu_1235_p2(15 downto 6);
    tmp_17_fu_1741_p4 <= sub_ln1193_6_fu_1290_p2(15 downto 6);
    tmp_18_fu_1780_p4 <= sub_ln1193_7_fu_1345_p2(15 downto 6);
    tmp_19_fu_1819_p4 <= sub_ln1193_8_fu_1400_p2(15 downto 6);
    tmp_20_fu_1858_p4 <= sub_ln1193_9_fu_1455_p2(15 downto 6);
    tmp_21_fu_974_p3 <= sub_ln1193_fu_960_p2(15 downto 15);
    tmp_22_fu_1021_p3 <= sub_ln1193_1_fu_1015_p2(16 downto 16);
    tmp_23_fu_1029_p3 <= sub_ln1193_1_fu_1015_p2(15 downto 15);
    tmp_24_fu_1076_p3 <= sub_ln1193_2_fu_1070_p2(16 downto 16);
    tmp_25_fu_1084_p3 <= sub_ln1193_2_fu_1070_p2(15 downto 15);
    tmp_26_fu_1131_p3 <= sub_ln1193_3_fu_1125_p2(16 downto 16);
    tmp_27_fu_1139_p3 <= sub_ln1193_3_fu_1125_p2(15 downto 15);
    tmp_28_fu_1186_p3 <= sub_ln1193_4_fu_1180_p2(16 downto 16);
    tmp_29_fu_1194_p3 <= sub_ln1193_4_fu_1180_p2(15 downto 15);
    tmp_30_fu_1241_p3 <= sub_ln1193_5_fu_1235_p2(16 downto 16);
    tmp_31_fu_1249_p3 <= sub_ln1193_5_fu_1235_p2(15 downto 15);
    tmp_32_fu_1296_p3 <= sub_ln1193_6_fu_1290_p2(16 downto 16);
    tmp_33_fu_1304_p3 <= sub_ln1193_6_fu_1290_p2(15 downto 15);
    tmp_34_fu_1351_p3 <= sub_ln1193_7_fu_1345_p2(16 downto 16);
    tmp_35_fu_1359_p3 <= sub_ln1193_7_fu_1345_p2(15 downto 15);
    tmp_36_fu_1406_p3 <= sub_ln1193_8_fu_1400_p2(16 downto 16);
    tmp_37_fu_1414_p3 <= sub_ln1193_8_fu_1400_p2(15 downto 15);
    tmp_38_fu_1461_p3 <= sub_ln1193_9_fu_1455_p2(16 downto 16);
    tmp_39_fu_1469_p3 <= sub_ln1193_9_fu_1455_p2(15 downto 15);
    tmp_fu_966_p3 <= sub_ln1193_fu_960_p2(16 downto 16);
    x_max_V_fu_946_p3 <= 
        select_ln86_7_fu_935_p3 when (icmp_ln1496_8_fu_941_p2(0) = '1') else 
        select_ln86_6_reg_2184;
    xor_ln340_10_fu_994_p2 <= (tmp_fu_966_p3 xor tmp_21_fu_974_p3);
    xor_ln340_11_fu_1049_p2 <= (tmp_23_fu_1029_p3 xor tmp_22_fu_1021_p3);
    xor_ln340_12_fu_1104_p2 <= (tmp_25_fu_1084_p3 xor tmp_24_fu_1076_p3);
    xor_ln340_13_fu_1159_p2 <= (tmp_27_fu_1139_p3 xor tmp_26_fu_1131_p3);
    xor_ln340_14_fu_1214_p2 <= (tmp_29_fu_1194_p3 xor tmp_28_fu_1186_p3);
    xor_ln340_15_fu_1269_p2 <= (tmp_31_fu_1249_p3 xor tmp_30_fu_1241_p3);
    xor_ln340_16_fu_1324_p2 <= (tmp_33_fu_1304_p3 xor tmp_32_fu_1296_p3);
    xor_ln340_17_fu_1379_p2 <= (tmp_35_fu_1359_p3 xor tmp_34_fu_1351_p3);
    xor_ln340_18_fu_1434_p2 <= (tmp_37_fu_1414_p3 xor tmp_36_fu_1406_p3);
    xor_ln340_19_fu_1489_p2 <= (tmp_39_fu_1469_p3 xor tmp_38_fu_1461_p3);
    xor_ln340_1_fu_1055_p2 <= (tmp_22_fu_1021_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_1110_p2 <= (tmp_24_fu_1076_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_1165_p2 <= (tmp_26_fu_1131_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_1220_p2 <= (tmp_28_fu_1186_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_1275_p2 <= (tmp_30_fu_1241_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1330_p2 <= (tmp_32_fu_1296_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1385_p2 <= (tmp_34_fu_1351_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1440_p2 <= (tmp_36_fu_1406_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_1495_p2 <= (tmp_38_fu_1461_p3 xor ap_const_lv1_1);
    xor_ln340_fu_1000_p2 <= (tmp_fu_966_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_1037_p2 <= (tmp_23_fu_1029_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_1092_p2 <= (tmp_25_fu_1084_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_1147_p2 <= (tmp_27_fu_1139_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_1202_p2 <= (tmp_29_fu_1194_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1257_p2 <= (tmp_31_fu_1249_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1312_p2 <= (tmp_33_fu_1304_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1367_p2 <= (tmp_35_fu_1359_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1422_p2 <= (tmp_37_fu_1414_p3 xor ap_const_lv1_1);
    xor_ln786_9_fu_1477_p2 <= (tmp_39_fu_1469_p3 xor ap_const_lv1_1);
    xor_ln786_fu_982_p2 <= (tmp_21_fu_974_p3 xor ap_const_lv1_1);
    y_V_10_fu_1951_p4 <= exp_sum_V_fu_1945_p2(17 downto 8);
    y_V_1_fu_1572_p3 <= 
        select_ln340_2_fu_1556_p3 when (or_ln340_1_fu_1061_p2(0) = '1') else 
        select_ln388_1_fu_1564_p3;
    y_V_2_fu_1611_p3 <= 
        select_ln340_4_fu_1595_p3 when (or_ln340_2_fu_1116_p2(0) = '1') else 
        select_ln388_2_fu_1603_p3;
    y_V_3_fu_1650_p3 <= 
        select_ln340_6_fu_1634_p3 when (or_ln340_3_fu_1171_p2(0) = '1') else 
        select_ln388_3_fu_1642_p3;
    y_V_4_fu_1689_p3 <= 
        select_ln340_8_fu_1673_p3 when (or_ln340_4_fu_1226_p2(0) = '1') else 
        select_ln388_4_fu_1681_p3;
    y_V_5_fu_1728_p3 <= 
        select_ln340_10_fu_1712_p3 when (or_ln340_5_fu_1281_p2(0) = '1') else 
        select_ln388_5_fu_1720_p3;
    y_V_6_fu_1767_p3 <= 
        select_ln340_12_fu_1751_p3 when (or_ln340_6_fu_1336_p2(0) = '1') else 
        select_ln388_6_fu_1759_p3;
    y_V_7_fu_1806_p3 <= 
        select_ln340_14_fu_1790_p3 when (or_ln340_7_fu_1391_p2(0) = '1') else 
        select_ln388_7_fu_1798_p3;
    y_V_8_fu_1845_p3 <= 
        select_ln340_16_fu_1829_p3 when (or_ln340_8_fu_1446_p2(0) = '1') else 
        select_ln388_8_fu_1837_p3;
    y_V_9_fu_1884_p3 <= 
        select_ln340_18_fu_1868_p3 when (or_ln340_9_fu_1501_p2(0) = '1') else 
        select_ln388_9_fu_1876_p3;
    y_V_fu_1533_p3 <= 
        select_ln340_fu_1517_p3 when (or_ln340_fu_1006_p2(0) = '1') else 
        select_ln388_fu_1525_p3;
    zext_ln230_1_fu_1580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_fu_1572_p3),64));
    zext_ln230_2_fu_1619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_fu_1611_p3),64));
    zext_ln230_3_fu_1658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_fu_1650_p3),64));
    zext_ln230_4_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_fu_1689_p3),64));
    zext_ln230_5_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_fu_1728_p3),64));
    zext_ln230_6_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_fu_1767_p3),64));
    zext_ln230_7_fu_1814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_7_fu_1806_p3),64));
    zext_ln230_8_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_8_fu_1845_p3),64));
    zext_ln230_9_fu_1892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_9_fu_1884_p3),64));
    zext_ln230_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_fu_1533_p3),64));
    zext_ln238_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_10_fu_1951_p4),64));
end behav;
