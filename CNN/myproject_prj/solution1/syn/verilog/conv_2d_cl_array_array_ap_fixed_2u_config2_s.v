// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_2u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] kernel_data_V_1;
reg   [15:0] kernel_data_V_2;
reg   [15:0] kernel_data_V_4;
reg   [15:0] kernel_data_V_5;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_8;
reg   [31:0] sX;
reg   [31:0] sY;
reg   [31:0] pY;
reg   [31:0] pX;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln78_reg_2399;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] and_ln272_2_reg_2471;
reg    res_V_data_1_V_blk_n;
reg   [6:0] indvar_flatten_reg_234;
reg   [15:0] kernel_data_V_1_loc_1_reg_245;
reg   [15:0] kernel_data_V_2_loc_1_reg_255;
reg   [15:0] kernel_data_V_4_loc_1_reg_265;
reg   [15:0] kernel_data_V_5_loc_1_reg_275;
reg   [15:0] kernel_data_V_7_loc_1_reg_285;
reg   [15:0] kernel_data_V_8_loc_1_reg_295;
reg    ap_block_state1;
wire   [0:0] icmp_ln78_fu_1512_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    io_acc_block_signal_op209;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln78_reg_2399_pp0_iter1_reg;
wire   [6:0] add_ln78_fu_1518_p2;
reg    ap_enable_reg_pp0_iter0;
reg  signed [15:0] kernel_data_V_6_ret_reg_2408;
reg  signed [15:0] kernel_data_V_3_ret_reg_2415;
reg  signed [15:0] kernel_data_V_0_ret_reg_2422;
reg  signed [15:0] kernel_data_V_1_ret_reg_2429;
reg  signed [15:0] kernel_data_V_2_ret_reg_2436;
reg  signed [15:0] kernel_data_V_4_ret_reg_2442;
reg  signed [15:0] kernel_data_V_5_ret_reg_2449;
reg  signed [15:0] kernel_data_V_7_ret_reg_2456;
reg  signed [15:0] kernel_data_V_8_ret_reg_2464;
wire   [0:0] and_ln272_2_fu_1664_p2;
wire   [15:0] res_out_0_V_fu_2107_p2;
reg   [15:0] res_out_0_V_reg_2475;
wire   [15:0] acc_1_V_fu_2177_p2;
reg   [15:0] acc_1_V_reg_2480;
wire   [0:0] icmp_ln293_fu_2186_p2;
reg   [0:0] icmp_ln293_reg_2485;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_ready;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_0;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_1;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_2;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_3;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_4;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_5;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_6;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_7;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_8;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call11;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call11;
wire    ap_block_state4_pp0_stage0_iter2_ignore_call11;
reg    ap_block_state5_pp0_stage0_iter3_ignore_call11;
reg    ap_block_pp0_stage0_11001_ignoreCallOp41;
reg   [15:0] ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_248_p4;
reg   [15:0] ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_258_p4;
reg   [15:0] ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_268_p4;
reg   [15:0] ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_278_p4;
reg   [15:0] ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_288_p4;
reg   [15:0] ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_298_p4;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start_reg;
wire   [31:0] select_ln308_fu_2213_p3;
wire   [31:0] add_ln301_fu_2261_p2;
wire   [0:0] icmp_ln297_fu_2252_p2;
wire   [31:0] add_ln306_fu_2195_p2;
reg   [31:0] pX_loc_1_fu_202;
reg   [31:0] sX_loc_1_fu_206;
reg   [31:0] pY_loc_1_fu_210;
reg   [31:0] sY_loc_1_fu_214;
wire   [31:0] select_ln303_fu_2279_p3;
reg    ap_block_pp0_stage0_01001;
wire  signed [15:0] mul_ln1118_969_fu_305_p0;
wire  signed [15:0] mul_ln1118_962_fu_306_p0;
wire  signed [15:0] mul_ln1118_964_fu_307_p0;
wire  signed [15:0] mul_ln1118_967_fu_308_p0;
wire  signed [15:0] mul_ln1118_963_fu_310_p0;
wire  signed [15:0] mul_ln1118_961_fu_311_p0;
wire  signed [25:0] sext_ln1118_868_fu_1758_p1;
wire  signed [15:0] mul_ln1118_968_fu_312_p0;
wire  signed [15:0] mul_ln1118_fu_313_p0;
wire  signed [15:0] mul_ln1118_966_fu_314_p0;
wire  signed [15:0] mul_ln1118_960_fu_317_p0;
wire  signed [15:0] mul_ln1118_959_fu_319_p0;
wire  signed [15:0] mul_ln1118_965_fu_320_p0;
wire  signed [15:0] mul_ln1118_970_fu_321_p0;
wire  signed [15:0] mul_ln1118_958_fu_322_p0;
wire   [30:0] tmp_fu_1620_p4;
wire   [30:0] tmp_40_fu_1636_p4;
wire   [0:0] icmp_ln272_fu_1608_p2;
wire   [0:0] icmp_ln272_1_fu_1614_p2;
wire   [0:0] icmp_ln272_2_fu_1630_p2;
wire   [0:0] icmp_ln272_3_fu_1646_p2;
wire   [0:0] and_ln272_1_fu_1658_p2;
wire   [0:0] and_ln272_fu_1652_p2;
wire   [25:0] mul_ln1118_fu_313_p2;
wire   [20:0] shl_ln_fu_1684_p3;
wire   [18:0] shl_ln1118_s_fu_1695_p3;
wire  signed [21:0] sext_ln1118_863_fu_1702_p1;
wire  signed [21:0] sext_ln1118_862_fu_1691_p1;
wire   [21:0] add_ln1118_fu_1706_p2;
wire   [11:0] trunc_ln708_s_fu_1712_p4;
wire   [25:0] mul_ln1118_958_fu_322_p2;
wire   [22:0] mul_ln1118_959_fu_319_p2;
wire   [12:0] trunc_ln708_1270_fu_1744_p4;
wire   [25:0] mul_ln1118_960_fu_317_p2;
wire   [25:0] mul_ln1118_961_fu_311_p2;
wire   [22:0] shl_ln1118_369_fu_1787_p3;
wire   [20:0] shl_ln1118_370_fu_1798_p3;
wire  signed [23:0] sext_ln1118_870_fu_1794_p1;
wire  signed [23:0] sext_ln1118_871_fu_1805_p1;
wire   [23:0] sub_ln1118_fu_1809_p2;
wire   [13:0] trunc_ln708_1271_fu_1815_p4;
wire   [22:0] mul_ln1118_962_fu_306_p2;
wire   [12:0] trunc_ln708_1272_fu_1829_p4;
wire   [24:0] mul_ln1118_963_fu_310_p2;
wire   [14:0] trunc_ln708_1273_fu_1851_p4;
wire   [25:0] mul_ln1118_964_fu_307_p2;
wire   [25:0] mul_ln1118_965_fu_320_p2;
wire   [22:0] mul_ln1118_966_fu_314_p2;
wire   [12:0] trunc_ln708_1274_fu_1893_p4;
wire   [21:0] shl_ln1118_371_fu_1911_p3;
wire   [19:0] shl_ln1118_372_fu_1922_p3;
wire  signed [22:0] sext_ln1118_881_fu_1929_p1;
wire  signed [22:0] sext_ln1118_880_fu_1918_p1;
wire   [22:0] add_ln1118_72_fu_1933_p2;
wire   [12:0] trunc_ln708_1275_fu_1939_p4;
wire   [25:0] mul_ln1118_967_fu_308_p2;
wire   [24:0] mul_ln1118_968_fu_312_p2;
wire   [14:0] trunc_ln708_1276_fu_1967_p4;
wire   [24:0] shl_ln1118_373_fu_1981_p3;
wire   [21:0] shl_ln1118_374_fu_1992_p3;
wire  signed [25:0] sext_ln1118_885_fu_1999_p1;
wire  signed [25:0] sext_ln1118_884_fu_1988_p1;
wire   [25:0] sub_ln1118_279_fu_2003_p2;
wire   [25:0] mul_ln1118_969_fu_305_p2;
wire   [24:0] mul_ln1118_970_fu_321_p2;
wire   [14:0] trunc_ln708_1277_fu_2037_p4;
wire   [15:0] trunc_ln708_1247_fu_1734_p4;
wire   [15:0] trunc_ln_fu_1674_p4;
wire   [15:0] trunc_ln708_1261_fu_2027_p4;
wire   [15:0] trunc_ln708_1255_fu_1883_p4;
wire   [15:0] trunc_ln708_1249_fu_1763_p4;
wire   [15:0] add_ln703_1286_fu_2057_p2;
wire   [15:0] add_ln703_fu_2051_p2;
wire   [15:0] add_ln703_1287_fu_2063_p2;
wire  signed [15:0] sext_ln708_438_fu_1977_p1;
wire  signed [15:0] sext_ln708_fu_1861_p1;
wire  signed [13:0] sext_ln1118_882_fu_1949_p1;
wire   [13:0] add_ln703_1290_fu_2081_p2;
wire  signed [14:0] sext_ln1118_872_fu_1825_p1;
wire  signed [14:0] sext_ln703_fu_2087_p1;
wire   [14:0] add_ln703_1291_fu_2091_p2;
wire   [15:0] add_ln703_1289_fu_2075_p2;
wire  signed [15:0] sext_ln703_573_fu_2097_p1;
wire   [15:0] add_ln703_1288_fu_2069_p2;
wire   [15:0] add_ln703_1292_fu_2101_p2;
wire   [15:0] trunc_ln708_1254_fu_1865_p4;
wire   [15:0] trunc_ln708_1250_fu_1773_p4;
wire  signed [15:0] sext_ln708_439_fu_2047_p1;
wire   [15:0] trunc_ln708_1260_fu_2009_p4;
wire   [15:0] trunc_ln708_1258_fu_1953_p4;
wire   [15:0] add_ln703_1295_fu_2119_p2;
wire   [15:0] add_ln703_1294_fu_2113_p2;
wire   [15:0] add_ln703_1296_fu_2125_p2;
wire  signed [13:0] sext_ln1118_873_fu_1839_p1;
wire  signed [13:0] sext_ln1118_867_fu_1754_p1;
wire   [13:0] add_ln703_1298_fu_2137_p2;
wire  signed [12:0] sext_ln1118_864_fu_1722_p1;
wire   [12:0] add_ln703_1299_fu_2147_p2;
wire  signed [13:0] sext_ln1118_878_fu_1903_p1;
wire  signed [13:0] sext_ln703_575_fu_2153_p1;
wire   [13:0] add_ln703_1300_fu_2157_p2;
wire  signed [14:0] sext_ln703_574_fu_2143_p1;
wire  signed [14:0] sext_ln703_576_fu_2163_p1;
wire   [14:0] add_ln703_1301_fu_2167_p2;
wire   [15:0] add_ln703_1297_fu_2131_p2;
wire  signed [15:0] sext_ln703_577_fu_2173_p1;
wire   [31:0] add_ln308_fu_2207_p2;
wire   [31:0] add_ln303_fu_2273_p2;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_249;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 kernel_data_V_1 = 16'd0;
#0 kernel_data_V_2 = 16'd0;
#0 kernel_data_V_4 = 16'd0;
#0 kernel_data_V_5 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_8 = 16'd0;
#0 sX = 32'd0;
#0 sY = 32'd0;
#0 pY = 32'd0;
#0 pX = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start_reg = 1'b0;
end

shift_line_buffer_array_ap_fixed_1u_config2_s call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_ready),
    .in_elem_data_V_read(data_V_data_V_dout),
    .kernel_window_1_V_read(ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_248_p4),
    .kernel_window_2_V_read(ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_258_p4),
    .kernel_window_4_V_read(ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_268_p4),
    .kernel_window_5_V_read(ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_278_p4),
    .kernel_window_7_V_read(ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_288_p4),
    .kernel_window_8_V_read(ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_298_p4),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_8),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln78_fu_1512_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_1512_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_234 <= add_ln78_fu_1518_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_234 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_1_loc_1_reg_245 <= kernel_data_V_1_ret_reg_2429;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_1_loc_1_reg_245 <= kernel_data_V_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_2_loc_1_reg_255 <= kernel_data_V_2_ret_reg_2436;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_2_loc_1_reg_255 <= kernel_data_V_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_4_loc_1_reg_265 <= kernel_data_V_4_ret_reg_2442;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_4_loc_1_reg_265 <= kernel_data_V_4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_5_loc_1_reg_275 <= kernel_data_V_5_ret_reg_2449;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_5_loc_1_reg_275 <= kernel_data_V_5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_7_loc_1_reg_285 <= kernel_data_V_7_ret_reg_2456;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_7_loc_1_reg_285 <= kernel_data_V_7;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_8_loc_1_reg_295 <= kernel_data_V_8_ret_reg_2464;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_8_loc_1_reg_295 <= kernel_data_V_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((icmp_ln293_fu_2186_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln293_fu_2186_p2 == 1'd0)) begin
            pX <= add_ln306_fu_2195_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_2186_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pX_loc_1_fu_202 <= 32'd0;
    end else if (((icmp_ln293_fu_2186_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pX_loc_1_fu_202 <= add_ln306_fu_2195_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        pX_loc_1_fu_202 <= pX;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_249)) begin
        if ((icmp_ln297_fu_2252_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln297_fu_2252_p2 == 1'd0)) begin
            pY <= add_ln301_fu_2261_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln297_fu_2252_p2 == 1'd1) & (icmp_ln293_fu_2186_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pY_loc_1_fu_210 <= 32'd0;
    end else if (((icmp_ln293_fu_2186_p2 == 1'd1) & (icmp_ln297_fu_2252_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pY_loc_1_fu_210 <= add_ln301_fu_2261_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        pY_loc_1_fu_210 <= pY;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((icmp_ln293_fu_2186_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln293_fu_2186_p2 == 1'd0)) begin
            sX <= select_ln308_fu_2213_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_2186_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sX_loc_1_fu_206 <= 32'd0;
    end else if (((icmp_ln293_fu_2186_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sX_loc_1_fu_206 <= select_ln308_fu_2213_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sX_loc_1_fu_206 <= sX;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln297_fu_2252_p2 == 1'd1) & (icmp_ln293_fu_2186_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sY_loc_1_fu_214 <= 32'd0;
    end else if (((icmp_ln293_fu_2186_p2 == 1'd1) & (icmp_ln297_fu_2252_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sY_loc_1_fu_214 <= select_ln303_fu_2279_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sY_loc_1_fu_214 <= sY;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln272_2_fu_1664_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_1_V_reg_2480 <= acc_1_V_fu_2177_p2;
        res_out_0_V_reg_2475 <= res_out_0_V_fu_2107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln272_2_reg_2471 <= and_ln272_2_fu_1664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln293_reg_2485 <= icmp_ln293_fu_2186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln78_reg_2399 <= icmp_ln78_fu_1512_p2;
        icmp_ln78_reg_2399_pp0_iter1_reg <= icmp_ln78_reg_2399;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_0_ret_reg_2422 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_0;
        kernel_data_V_3_ret_reg_2415 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_1;
        kernel_data_V_6_ret_reg_2408 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2399 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_1 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_3;
        kernel_data_V_1_ret_reg_2429 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_3;
        kernel_data_V_2 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_4;
        kernel_data_V_2_ret_reg_2436 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_4;
        kernel_data_V_4 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_5;
        kernel_data_V_4_ret_reg_2442 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_5;
        kernel_data_V_5 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_6;
        kernel_data_V_5_ret_reg_2449 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_6;
        kernel_data_V_7 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_7;
        kernel_data_V_7_ret_reg_2456 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_7;
        kernel_data_V_8 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_8;
        kernel_data_V_8_ret_reg_2464 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_reg_2485 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sY <= sY_loc_1_fu_214;
    end
end

always @ (*) begin
    if ((icmp_ln78_fu_1512_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_248_p4 = kernel_data_V_1_ret_reg_2429;
    end else begin
        ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_248_p4 = kernel_data_V_1_loc_1_reg_245;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_258_p4 = kernel_data_V_2_ret_reg_2436;
    end else begin
        ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_258_p4 = kernel_data_V_2_loc_1_reg_255;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_268_p4 = kernel_data_V_4_ret_reg_2442;
    end else begin
        ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_268_p4 = kernel_data_V_4_loc_1_reg_265;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_278_p4 = kernel_data_V_5_ret_reg_2449;
    end else begin
        ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_278_p4 = kernel_data_V_5_loc_1_reg_275;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_288_p4 = kernel_data_V_7_ret_reg_2456;
    end else begin
        ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_288_p4 = kernel_data_V_7_loc_1_reg_285;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_298_p4 = kernel_data_V_8_ret_reg_2464;
    end else begin
        ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_298_p4 = kernel_data_V_8_loc_1_reg_295;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp41) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2399 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2471) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2471) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2471) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2471) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln78_fu_1512_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln78_fu_1512_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_1_V_fu_2177_p2 = ($signed(add_ln703_1297_fu_2131_p2) + $signed(sext_ln703_577_fu_2173_p1));

assign add_ln1118_72_fu_1933_p2 = ($signed(sext_ln1118_881_fu_1929_p1) + $signed(sext_ln1118_880_fu_1918_p1));

assign add_ln1118_fu_1706_p2 = ($signed(sext_ln1118_863_fu_1702_p1) + $signed(sext_ln1118_862_fu_1691_p1));

assign add_ln301_fu_2261_p2 = (pY_loc_1_fu_210 + 32'd1);

assign add_ln303_fu_2273_p2 = (sY_loc_1_fu_214 + 32'd1);

assign add_ln306_fu_2195_p2 = (pX_loc_1_fu_202 + 32'd1);

assign add_ln308_fu_2207_p2 = (sX_loc_1_fu_206 + 32'd1);

assign add_ln703_1286_fu_2057_p2 = (trunc_ln708_1261_fu_2027_p4 + trunc_ln708_1255_fu_1883_p4);

assign add_ln703_1287_fu_2063_p2 = (trunc_ln708_1249_fu_1763_p4 + add_ln703_1286_fu_2057_p2);

assign add_ln703_1288_fu_2069_p2 = (add_ln703_fu_2051_p2 + add_ln703_1287_fu_2063_p2);

assign add_ln703_1289_fu_2075_p2 = ($signed(sext_ln708_438_fu_1977_p1) + $signed(sext_ln708_fu_1861_p1));

assign add_ln703_1290_fu_2081_p2 = ($signed(sext_ln1118_882_fu_1949_p1) + $signed(14'd883));

assign add_ln703_1291_fu_2091_p2 = ($signed(sext_ln1118_872_fu_1825_p1) + $signed(sext_ln703_fu_2087_p1));

assign add_ln703_1292_fu_2101_p2 = ($signed(add_ln703_1289_fu_2075_p2) + $signed(sext_ln703_573_fu_2097_p1));

assign add_ln703_1294_fu_2113_p2 = (trunc_ln708_1254_fu_1865_p4 + trunc_ln708_1250_fu_1773_p4);

assign add_ln703_1295_fu_2119_p2 = ($signed(sext_ln708_439_fu_2047_p1) + $signed(trunc_ln708_1260_fu_2009_p4));

assign add_ln703_1296_fu_2125_p2 = (trunc_ln708_1258_fu_1953_p4 + add_ln703_1295_fu_2119_p2);

assign add_ln703_1297_fu_2131_p2 = (add_ln703_1294_fu_2113_p2 + add_ln703_1296_fu_2125_p2);

assign add_ln703_1298_fu_2137_p2 = ($signed(sext_ln1118_873_fu_1839_p1) + $signed(sext_ln1118_867_fu_1754_p1));

assign add_ln703_1299_fu_2147_p2 = ($signed(sext_ln1118_864_fu_1722_p1) + $signed(13'd7057));

assign add_ln703_1300_fu_2157_p2 = ($signed(sext_ln1118_878_fu_1903_p1) + $signed(sext_ln703_575_fu_2153_p1));

assign add_ln703_1301_fu_2167_p2 = ($signed(sext_ln703_574_fu_2143_p1) + $signed(sext_ln703_576_fu_2163_p1));

assign add_ln703_fu_2051_p2 = (trunc_ln708_1247_fu_1734_p4 + trunc_ln_fu_1674_p4);

assign add_ln78_fu_1518_p2 = (indvar_flatten_reg_234 + 7'd1);

assign and_ln272_1_fu_1658_p2 = (icmp_ln272_3_fu_1646_p2 & icmp_ln272_2_fu_1630_p2);

assign and_ln272_2_fu_1664_p2 = (and_ln272_fu_1652_p2 & and_ln272_1_fu_1658_p2);

assign and_ln272_fu_1652_p2 = (icmp_ln272_fu_1608_p2 & icmp_ln272_1_fu_1614_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln272_2_reg_2471) & (io_acc_block_signal_op209 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln78_reg_2399 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln272_2_reg_2471) & (io_acc_block_signal_op209 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln78_reg_2399 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp41 = (((1'd1 == and_ln272_2_reg_2471) & (io_acc_block_signal_op209 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln78_reg_2399 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln272_2_reg_2471) & (io_acc_block_signal_op209 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln78_reg_2399 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln78_reg_2399 == 1'd0) & (data_V_data_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call11 = ((icmp_ln78_reg_2399 == 1'd0) & (data_V_data_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2_ignore_call11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((1'd1 == and_ln272_2_reg_2471) & (io_acc_block_signal_op209 == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3_ignore_call11 = ((1'd1 == and_ln272_2_reg_2471) & (io_acc_block_signal_op209 == 1'b0));
end

always @ (*) begin
    ap_condition_249 = ((icmp_ln293_fu_2186_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start = call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1430_ap_start_reg;

assign icmp_ln272_1_fu_1614_p2 = ((sY_loc_1_fu_214 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln272_2_fu_1630_p2 = (($signed(tmp_fu_1620_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_3_fu_1646_p2 = (($signed(tmp_40_fu_1636_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_1608_p2 = ((sX_loc_1_fu_206 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_2186_p2 = ((pX_loc_1_fu_202 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln297_fu_2252_p2 = ((pY_loc_1_fu_210 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1512_p2 = ((indvar_flatten_reg_234 == 7'd100) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op209 = (res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign mul_ln1118_958_fu_322_p0 = kernel_data_V_1_ret_reg_2429;

assign mul_ln1118_958_fu_322_p2 = ($signed(mul_ln1118_958_fu_322_p0) * $signed(-'h12C));

assign mul_ln1118_959_fu_319_p0 = kernel_data_V_1_ret_reg_2429;

assign mul_ln1118_959_fu_319_p2 = ($signed(mul_ln1118_959_fu_319_p0) * $signed('h26));

assign mul_ln1118_960_fu_317_p0 = sext_ln1118_868_fu_1758_p1;

assign mul_ln1118_960_fu_317_p2 = ($signed(mul_ln1118_960_fu_317_p0) * $signed(-'h16B));

assign mul_ln1118_961_fu_311_p0 = sext_ln1118_868_fu_1758_p1;

assign mul_ln1118_961_fu_311_p2 = ($signed(mul_ln1118_961_fu_311_p0) * $signed('h167));

assign mul_ln1118_962_fu_306_p0 = kernel_data_V_3_ret_reg_2415;

assign mul_ln1118_962_fu_306_p2 = ($signed(mul_ln1118_962_fu_306_p0) * $signed(-'h34));

assign mul_ln1118_963_fu_310_p0 = kernel_data_V_4_ret_reg_2442;

assign mul_ln1118_963_fu_310_p2 = ($signed(mul_ln1118_963_fu_310_p0) * $signed('hD6));

assign mul_ln1118_964_fu_307_p0 = kernel_data_V_4_ret_reg_2442;

assign mul_ln1118_964_fu_307_p2 = ($signed(mul_ln1118_964_fu_307_p0) * $signed(-'h1DF));

assign mul_ln1118_965_fu_320_p0 = kernel_data_V_5_ret_reg_2449;

assign mul_ln1118_965_fu_320_p2 = ($signed(mul_ln1118_965_fu_320_p0) * $signed('h1C5));

assign mul_ln1118_966_fu_314_p0 = kernel_data_V_5_ret_reg_2449;

assign mul_ln1118_966_fu_314_p2 = ($signed(mul_ln1118_966_fu_314_p0) * $signed(-'h36));

assign mul_ln1118_967_fu_308_p0 = kernel_data_V_6_ret_reg_2408;

assign mul_ln1118_967_fu_308_p2 = ($signed(mul_ln1118_967_fu_308_p0) * $signed('h191));

assign mul_ln1118_968_fu_312_p0 = kernel_data_V_7_ret_reg_2456;

assign mul_ln1118_968_fu_312_p2 = ($signed(mul_ln1118_968_fu_312_p0) * $signed(-'hA2));

assign mul_ln1118_969_fu_305_p0 = kernel_data_V_8_ret_reg_2464;

assign mul_ln1118_969_fu_305_p2 = ($signed(mul_ln1118_969_fu_305_p0) * $signed(-'h150));

assign mul_ln1118_970_fu_321_p0 = kernel_data_V_8_ret_reg_2464;

assign mul_ln1118_970_fu_321_p2 = ($signed(mul_ln1118_970_fu_321_p0) * $signed('hA5));

assign mul_ln1118_fu_313_p0 = kernel_data_V_0_ret_reg_2422;

assign mul_ln1118_fu_313_p2 = ($signed(mul_ln1118_fu_313_p0) * $signed('h178));

assign res_V_data_0_V_din = res_out_0_V_reg_2475;

assign res_V_data_1_V_din = acc_1_V_reg_2480;

assign res_out_0_V_fu_2107_p2 = (add_ln703_1288_fu_2069_p2 + add_ln703_1292_fu_2101_p2);

assign select_ln303_fu_2279_p3 = ((icmp_ln272_1_fu_1614_p2[0:0] === 1'b1) ? 32'd2 : add_ln303_fu_2273_p2);

assign select_ln308_fu_2213_p3 = ((icmp_ln272_fu_1608_p2[0:0] === 1'b1) ? 32'd2 : add_ln308_fu_2207_p2);

assign sext_ln1118_862_fu_1691_p1 = $signed(shl_ln_fu_1684_p3);

assign sext_ln1118_863_fu_1702_p1 = $signed(shl_ln1118_s_fu_1695_p3);

assign sext_ln1118_864_fu_1722_p1 = $signed(trunc_ln708_s_fu_1712_p4);

assign sext_ln1118_867_fu_1754_p1 = $signed(trunc_ln708_1270_fu_1744_p4);

assign sext_ln1118_868_fu_1758_p1 = kernel_data_V_2_ret_reg_2436;

assign sext_ln1118_870_fu_1794_p1 = $signed(shl_ln1118_369_fu_1787_p3);

assign sext_ln1118_871_fu_1805_p1 = $signed(shl_ln1118_370_fu_1798_p3);

assign sext_ln1118_872_fu_1825_p1 = $signed(trunc_ln708_1271_fu_1815_p4);

assign sext_ln1118_873_fu_1839_p1 = $signed(trunc_ln708_1272_fu_1829_p4);

assign sext_ln1118_878_fu_1903_p1 = $signed(trunc_ln708_1274_fu_1893_p4);

assign sext_ln1118_880_fu_1918_p1 = $signed(shl_ln1118_371_fu_1911_p3);

assign sext_ln1118_881_fu_1929_p1 = $signed(shl_ln1118_372_fu_1922_p3);

assign sext_ln1118_882_fu_1949_p1 = $signed(trunc_ln708_1275_fu_1939_p4);

assign sext_ln1118_884_fu_1988_p1 = $signed(shl_ln1118_373_fu_1981_p3);

assign sext_ln1118_885_fu_1999_p1 = $signed(shl_ln1118_374_fu_1992_p3);

assign sext_ln703_573_fu_2097_p1 = $signed(add_ln703_1291_fu_2091_p2);

assign sext_ln703_574_fu_2143_p1 = $signed(add_ln703_1298_fu_2137_p2);

assign sext_ln703_575_fu_2153_p1 = $signed(add_ln703_1299_fu_2147_p2);

assign sext_ln703_576_fu_2163_p1 = $signed(add_ln703_1300_fu_2157_p2);

assign sext_ln703_577_fu_2173_p1 = $signed(add_ln703_1301_fu_2167_p2);

assign sext_ln703_fu_2087_p1 = $signed(add_ln703_1290_fu_2081_p2);

assign sext_ln708_438_fu_1977_p1 = $signed(trunc_ln708_1276_fu_1967_p4);

assign sext_ln708_439_fu_2047_p1 = $signed(trunc_ln708_1277_fu_2037_p4);

assign sext_ln708_fu_1861_p1 = $signed(trunc_ln708_1273_fu_1851_p4);

assign shl_ln1118_369_fu_1787_p3 = {{kernel_data_V_3_ret_reg_2415}, {7'd0}};

assign shl_ln1118_370_fu_1798_p3 = {{kernel_data_V_3_ret_reg_2415}, {5'd0}};

assign shl_ln1118_371_fu_1911_p3 = {{kernel_data_V_6_ret_reg_2408}, {6'd0}};

assign shl_ln1118_372_fu_1922_p3 = {{kernel_data_V_6_ret_reg_2408}, {4'd0}};

assign shl_ln1118_373_fu_1981_p3 = {{kernel_data_V_7_ret_reg_2456}, {9'd0}};

assign shl_ln1118_374_fu_1992_p3 = {{kernel_data_V_7_ret_reg_2456}, {6'd0}};

assign shl_ln1118_s_fu_1695_p3 = {{kernel_data_V_0_ret_reg_2422}, {3'd0}};

assign shl_ln_fu_1684_p3 = {{kernel_data_V_0_ret_reg_2422}, {5'd0}};

assign start_out = real_start;

assign sub_ln1118_279_fu_2003_p2 = ($signed(sext_ln1118_885_fu_1999_p1) - $signed(sext_ln1118_884_fu_1988_p1));

assign sub_ln1118_fu_1809_p2 = ($signed(sext_ln1118_870_fu_1794_p1) - $signed(sext_ln1118_871_fu_1805_p1));

assign tmp_40_fu_1636_p4 = {{pX_loc_1_fu_202[31:1]}};

assign tmp_fu_1620_p4 = {{pY_loc_1_fu_210[31:1]}};

assign trunc_ln708_1247_fu_1734_p4 = {{mul_ln1118_958_fu_322_p2[25:10]}};

assign trunc_ln708_1249_fu_1763_p4 = {{mul_ln1118_960_fu_317_p2[25:10]}};

assign trunc_ln708_1250_fu_1773_p4 = {{mul_ln1118_961_fu_311_p2[25:10]}};

assign trunc_ln708_1254_fu_1865_p4 = {{mul_ln1118_964_fu_307_p2[25:10]}};

assign trunc_ln708_1255_fu_1883_p4 = {{mul_ln1118_965_fu_320_p2[25:10]}};

assign trunc_ln708_1258_fu_1953_p4 = {{mul_ln1118_967_fu_308_p2[25:10]}};

assign trunc_ln708_1260_fu_2009_p4 = {{sub_ln1118_279_fu_2003_p2[25:10]}};

assign trunc_ln708_1261_fu_2027_p4 = {{mul_ln1118_969_fu_305_p2[25:10]}};

assign trunc_ln708_1270_fu_1744_p4 = {{mul_ln1118_959_fu_319_p2[22:10]}};

assign trunc_ln708_1271_fu_1815_p4 = {{sub_ln1118_fu_1809_p2[23:10]}};

assign trunc_ln708_1272_fu_1829_p4 = {{mul_ln1118_962_fu_306_p2[22:10]}};

assign trunc_ln708_1273_fu_1851_p4 = {{mul_ln1118_963_fu_310_p2[24:10]}};

assign trunc_ln708_1274_fu_1893_p4 = {{mul_ln1118_966_fu_314_p2[22:10]}};

assign trunc_ln708_1275_fu_1939_p4 = {{add_ln1118_72_fu_1933_p2[22:10]}};

assign trunc_ln708_1276_fu_1967_p4 = {{mul_ln1118_968_fu_312_p2[24:10]}};

assign trunc_ln708_1277_fu_2037_p4 = {{mul_ln1118_970_fu_321_p2[24:10]}};

assign trunc_ln708_s_fu_1712_p4 = {{add_ln1118_fu_1706_p2[21:10]}};

assign trunc_ln_fu_1674_p4 = {{mul_ln1118_fu_313_p2[25:10]}};

endmodule //conv_2d_cl_array_array_ap_fixed_2u_config2_s
